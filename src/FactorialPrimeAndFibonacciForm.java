/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author midon7419
 */
public class FactorialPrimeAndFibonacciForm extends javax.swing.JFrame {

    /**
     * Creates new form FactorialPrimeAndFibonacciForm
     */
    public FactorialPrimeAndFibonacciForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlelbl = new javax.swing.JLabel();
        factoriallbl = new javax.swing.JLabel();
        primelbl = new javax.swing.JLabel();
        fibonaccilbl = new javax.swing.JLabel();
        factorialInputtxt = new javax.swing.JTextField();
        primeInputtxt = new javax.swing.JTextField();
        fibonacciInputtxt = new javax.swing.JTextField();
        factorialOutputlbl = new javax.swing.JLabel();
        fibonacciOutputlbl = new javax.swing.JLabel();
        primeOutputlbl = new javax.swing.JLabel();
        factorialbtn = new javax.swing.JButton();
        primebtn = new javax.swing.JButton();
        fibonaccibtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titlelbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titlelbl.setText("--NUMBERS--");

        factoriallbl.setText("Enter a number and press 'calculate' to find the factorial of that number");

        primelbl.setText("Enter a number and press 'calculate' to determine whether it is a prime or not");

        fibonaccilbl.setText("Enter a number and press 'calculate' to find the corresponding Fibonacci number");

        factorialOutputlbl.setText("----------");

        fibonacciOutputlbl.setText("----------");

        primeOutputlbl.setText("----------");

        factorialbtn.setText("Calculate");
        factorialbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorialbtnActionPerformed(evt);
            }
        });

        primebtn.setText("Calculate");
        primebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primebtnActionPerformed(evt);
            }
        });

        fibonaccibtn.setText("Calculate");
        fibonaccibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fibonaccibtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(fibonaccilbl))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(factoriallbl)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(factorialInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(factorialOutputlbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(factorialbtn)
                                .addGap(37, 37, 37))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(titlelbl))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(primelbl)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(primeInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(primeOutputlbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(primebtn)
                        .addGap(38, 38, 38)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(fibonacciInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(fibonacciOutputlbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fibonaccibtn)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlelbl)
                .addGap(18, 18, 18)
                .addComponent(factoriallbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(factorialInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(factorialOutputlbl)
                    .addComponent(factorialbtn))
                .addGap(16, 16, 16)
                .addComponent(primelbl)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(primeInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(primeOutputlbl)
                    .addComponent(primebtn))
                .addGap(21, 21, 21)
                .addComponent(fibonaccilbl)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fibonacciInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fibonacciOutputlbl)
                    .addComponent(fibonaccibtn))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void factorialbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorialbtnActionPerformed
        try{
        int factorialInput;
        factorialInput = Integer.parseInt(factorialInputtxt.getText());
        
        for(int i = factorialInput-1; i >=1; i--){
            factorialInput = factorialInput*i;
            if(i == 1){
            factorialOutputlbl.setText(String.valueOf((factorialInput)));
            }      
        }
        }
        catch(NumberFormatException nfe){
            System.err.println("You must enter integers " + nfe); 
        }
    }//GEN-LAST:event_factorialbtnActionPerformed

    private void primebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primebtnActionPerformed
        try{
            int userEntry;
            int remainder;
            boolean isPrime = true;
            
            userEntry = Integer.parseInt(primeInputtxt.getText());
            
            for (int i = 2; i <= userEntry/2; i+=1){
                remainder = userEntry%i;
                
                if (remainder == 0){
                    isPrime = false;
                    break;
                }
            }
            if (isPrime == true){
                primeOutputlbl.setText("Prime");
            }else{
                primeOutputlbl.setText("Not prime");
            }
            
        }
        catch(NumberFormatException nfe){
            System.err.println("You must enter integers " + nfe); 
        }
    }//GEN-LAST:event_primebtnActionPerformed

    private void fibonaccibtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fibonaccibtnActionPerformed
        try{
            int a = 0;
            int b = 1;
            int userNumber = 0;
            userNumber = Integer.parseInt(fibonacciInputtxt.getText());
            
            for (double i = 1; i < (double)userNumber; i+=1){
               if((i%2) == 0){
                   a = a+b;
               }
               else if((i%2) == 1){
                   b = b+a;
               }
            }
            if (a > b){
                fibonacciOutputlbl.setText(String.valueOf(a));
            }
            if (b > a){
                fibonacciOutputlbl.setText(String.valueOf(b));
            }
        }
        catch(NumberFormatException nfe){
            System.err.println("You must enter integers " + nfe); 
        }
        //0 1 1 2 3 5 8 13 21 34 
        //1 2 3 4 5 6 7 8  9  10
    }//GEN-LAST:event_fibonaccibtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FactorialPrimeAndFibonacciForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FactorialPrimeAndFibonacciForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FactorialPrimeAndFibonacciForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FactorialPrimeAndFibonacciForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FactorialPrimeAndFibonacciForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField factorialInputtxt;
    private javax.swing.JLabel factorialOutputlbl;
    private javax.swing.JButton factorialbtn;
    private javax.swing.JLabel factoriallbl;
    private javax.swing.JTextField fibonacciInputtxt;
    private javax.swing.JLabel fibonacciOutputlbl;
    private javax.swing.JButton fibonaccibtn;
    private javax.swing.JLabel fibonaccilbl;
    private javax.swing.JTextField primeInputtxt;
    private javax.swing.JLabel primeOutputlbl;
    private javax.swing.JButton primebtn;
    private javax.swing.JLabel primelbl;
    private javax.swing.JLabel titlelbl;
    // End of variables declaration//GEN-END:variables
}
